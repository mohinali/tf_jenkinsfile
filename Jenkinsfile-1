pipeline {
    agent any

    parameters {
        string(name: 'PUBKEY',
            defaultValue: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCi1e+EnDFQpCnhc9Gv2DhPtDkzE2+XVJVkOECnp6+2w3gJzbujRqlYGtwkPjSQyq1hRVQjnuW/F2PN3fOeLPIaY+sm7QYM9hGKl7RrxyDn+lH9S2y90jSjmMDIXRHma++Sv2QDOCoBuZ75psBfh6yHLWX4XhtlA6ac0n/xpyjxJJKqlw0uIZnxHb1dzQi/soF3+FenKVw+qRDYTAo8vltYwUrKTi4IxBvDLwVipMrl/4uqWJTwH33kBdqFzYxMNWN/LLFPdVQv5GczKIw+UeLuo1/paveXuFJW1QrSNQMDEb0eRDPqVuuM0CmEaXm4Z9m2UR+rQKdcGeUjJ72JJ0/z mohin@nblap314',
            description: 'ssh public key (ex. ~/.ssh/id_rsa.pub)')
        string(name: 'IMAGENAME',
            defaultValue: 'ubuntu',
            description: 'openstack image name that is already uploaded' )
        string(name: 'EXTNETUUIDNAME',
            defaultValue: 'provider',
            description: 'the provider network' )
    }

    stages {
        stage('make variables file') {
            steps {
                script {
                    sh "echo ${params.PUBKEY} > pubkey"
                    sh "sed -i 's/image/${params.IMAGENAME}/' variable.tf"
                    sh "sed -i 's/public_network_name/${params.EXTNETUUIDNAME}/' variable.tf"
                }
            }
        }

        stage('make a ready to use terraform') {
            steps {
                script {
                    //sh 'wget https://releases.hashicorp.com/terraform/0.14.0/terraform_0.14.0_linux_amd64.zip && unzip terraform_0.14.0_linux_amd64.zip -d /usr/local/bin'
                    sh 'terraform version'
                    sh 'terraform init'
                    echo 'done'
                }
            }
        }

        stage('make a env') {
            steps {
                script {
                    sh 'terraform plan'
                    sh 'terraform apply --auto-approve'
                }
            }
        }
    }
}
